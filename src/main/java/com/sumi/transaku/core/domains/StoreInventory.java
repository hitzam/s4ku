package com.sumi.transaku.core.domains;
// Generated May 29, 2016 4:58:28 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;


/**
 * User generated by hbm2java
 */
@Entity
public class StoreInventory implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	private Integer id;
	
//	@OneToOne(cascade = CascadeType.ALL, mappedBy = "storeInventory")
//	private Customer customer;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "seller_id")
	@JsonIgnore
	private Customer seller;

	@Transient
	private int customerId;
	
	private String code;
	
	private String name;
	private String description;
	private double buyPrice;
	private double price;
	private double qty;
	private String itemCondition;
	private Double weight;

	@JsonFormat(pattern="yyyy-MM-dd", timezone="Asia/Jakarta")
	private Date createdDate;

	@JsonFormat(pattern="yyyy-MM-dd hh:mm:ss", timezone="Asia/Jakarta")
	private Date updatedDate;

	private String note;

	@OneToMany(mappedBy = "inventory", cascade = CascadeType.ALL)
	@JsonIgnore
	private Set<SellDetail> sellDetails;
	
	@ManyToOne
	@JoinColumn(name = "category_id")
	private InventoryCategory category;

	@ManyToOne
	@JoinColumn(name = "qty_unit_id")
	private QtyUnit qtyUnit;

	private int isItemToSell;
	private int isConsignment;
	private int enabled;
	
	@Transient
	private String pictureBase64;
	private String picturePath;

	public StoreInventory() {
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public double getBuyPrice() {
		return buyPrice;
	}

	public void setBuyPrice(double buyPrice) {
		this.buyPrice = buyPrice;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public double getQty() {
		return qty;
	}

	public void setQty(double qty) {
		this.qty = qty;
	}

	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	public Date getUpdatedDate() {
		return updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	public String getNote() {
		return note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	public Customer getSeller() {
		return seller;
	}

	public void setSeller(Customer seller) {
		this.seller = seller;
	}

	public int getCustomerId() {
		return customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	public Set<SellDetail> getSellDetails() {
		return sellDetails;
	}

	public void setSellDetails(Set<SellDetail> sellDetails) {
		this.sellDetails = sellDetails;
	}

	public String getItemCondition() {
		return itemCondition;
	}

	public void setItemCondition(String itemCondition) {
		this.itemCondition = itemCondition;
	}

	public Double getWeight() {
		return weight;
	}

	public void setWeight(Double weight) {
		this.weight = weight;
	}

	public InventoryCategory getCategory() {
		return category;
	}

	public void setCategory(InventoryCategory category) {
		this.category = category;
	}

	public int getIsItemToSell() {
		return isItemToSell;
	}

	public void setIsItemToSell(int isItemToSell) {
		this.isItemToSell = isItemToSell;
	}

	public QtyUnit getQtyUnit() {
		return qtyUnit;
	}

	public void setQtyUnit(QtyUnit qtyUnit) {
		this.qtyUnit = qtyUnit;
	}
	
	public String getPictureBase64() {
		return pictureBase64;
	}

	public void setPictureBase64(String pictureBase64) {
		this.pictureBase64 = pictureBase64;
	}

	public int getIsConsignment() {
		return isConsignment;
	}

	public void setIsConsignment(int isConsignment) {
		this.isConsignment = isConsignment;
	}

	public int getEnabled() {
		return enabled;
	}

	public void setEnabled(int enabled) {
		this.enabled = enabled;
	}

	public String getPicturePath() {
		return picturePath;
	}

	public void setPicturePath(String picturePath) {
		this.picturePath = picturePath;
	}

	@Override
	public String toString() {
		return "StoreInventory [id=" + id + ", customerId=" + customerId + ", code=" + code + ", name=" + name
				+ ", description=" + description + ", price=" + price + ", qty=" + qty + ", itemCondition="
				+ itemCondition + ", weight=" + weight + ", createdDate=" + createdDate + ", updatedDate=" + updatedDate
				+ ", note=" + note + ", category=" + category + ", enabled=" + enabled + ", picturePath=" + picturePath + "]";
	}
	

}
